#summary Comment réactiver les scripts EventScripts désactivés pendant le match ?


=== Plusieurs catégories de scripts ===
La première chose qu'il faut savoir est qu'il y a deux catégories de scripts : 
 # Ceux qui peuvent être chargés, activés, déchargés et désactivés pendant le jeu
 # Ceux qui _ne peuvent pas être désactivés_, mais _uniquement déchargés_ (exemple typique de l'anti-camp)
 # Ceux qui nécessitent un redémarrage du serveur pour être chargés et fonctionner correctement
Ces différentes catégories sont le reflet des différentes façons dont les scripts ont été programmés. Le script idéal est celui qui prévoit que l'on puisse le désactiver puis le réactiver sans soucis, mais personnellement je n'en ai encore jamais vu :-)

Si vous ne voulez pas vous prendre la tête avec tout ça, considérez vos scripts comme faisant partie de la première première catégorie. Vous utiliserez alors la méthode la plus simple et (je pense) la plus utilisée, même si parfois derrière des scripts en souffrent jusqu'à ce que toute la population du serveur soit complètement renouvelée. 
Malgré tout, si vous ne voulez vraiment pas vous prendre la tête la solution idéale reste de posséder un serveur dédié aux wars :-(

`
=== Première catégorie ===

Pour les scripts de la première catégorie, il sera inutile de charger et décharger les scripts un par un dans les fichiers de configuration. L'utilisation de la variable *mattie_eventscripts* suffit à ordonner à EventScripts désactiver ou activer les scripts sur demande.

Pour désactiver ces scripts, dans le fichier *cfg/cssmatch/configurations/default.cfg* :
{{{
mattie_eventscripts 0
}}}
Pour réactiver ces scripts, dans le fichier *cfg/[server server.cfg]* :
{{{
mattie_eventscripts 1
}}}


`
=== Deuxième catégorie ===

Les scripts de la deuxième catégorie sont plutôt rares. Vous aurez beau les mettre en pause (les désactiver), ils continueront en partie à s'exécuter. L'exemple le plus répandu est celui de l'anti-camp qui continue à punir les joueurs malgré qu'ils aient été désactivés avec la commande _es_disable_ ou la variable _mattie_eventscripts_.

Comme on ne peut pas désactiver ces scripts, il va falloir les décharger complètement avec la commande _es_unload_. Dans le fichier *cfg/cssmatch/configurations/default.cfg* :
{{{
es_unload le_script
}}}
Pour recharger ces scripts, il se peut qu'il suffise d'utiliser la commande _es_load_ dans le fichier *cfg/server.cfg* :
{{{
es_load le_script
}}}
_*Note :* Pour éviter de copier/coller tous les es_load de votre fichier *autoexec.cfg* et donc entretenir 2 listes de es_load identiques, créez vous un fichier CFG contenant tous les es_load que votre serveur doit exécuter et exécuter ce fichier dans votre fichier *server.cfg*._

Attention toutefois, il se peut que le script en question fasse partie de la dernière catégorie de scripts que je vais présenter maintenant.


`
=== Troisième catégorie ===

Les scripts de la troisième catégorie sont plus difficiles à identifier. Et pourtant ils sont nombreux, c'est peut-être même les plus répandus. Ces scripts doivent n'être chargés que lors du démarrage du serveur (ex : avec un reboot) car ils ont besoin de surveiller les connexions et les déconnexions des joueurs pour fonctionner correctement.

Pour décharger ces scripts, utilisez la commande _es_unload_. Dans le fichier *cfg/cssmatch/configurations/default.cfg* :
{{{
es_unload le_script
}}}
Par contre comme je viens de le dire, vous ne pouvez pas recharger ces scripts en fin de match (à moins que tous les joueurs ne se déconnectent puis se reconnectent au serveur). Si vous utiliser ce style de script, vous devez rebooter votre serveur pour espérer les voir se rétablir correctement.


`
=== Déterminer la catégorie à laquelle appartient un script ===

_"Tout ça est bien beau, mais comment savoir quel procéder utiliser pour quel script ?"_

Vous allez être déçu, mais il n'y a que deux "solutions" qui n'en sont pas vraiment :
 * Considérez vos scripts comme faisant partie de la première catégorie, puis adaptez la méthode de déchargement de vos scripts en fonction de vos observations (ex : si un script continue à fonctionner en war, il fait partie de la deuxième catégorie présentée, utilisez donc la méthode de chargement/déchargement correspondante pour tous vos scripts)

 * Demander à l'auteur du script comment désactiver/activer au mieux son script, ou demandez autour de vous ce qu'il en est (ou si vous savez scripter, regarder le code du script)


=== Scripts installés automatiquement par votre hébergeur ===

Pensez à désactiver ou réactiver les scripts que vous avez installés de manière automatique via votre espace client. Par exemple, il se peut que vous trouviez ceci dans votre *autoexec.cfg* :
{{{
exec pluginserv.cfg
}}}
Dans ce cas, vous devrez tenir compte de ce qui se trouve dans le fichier *pluginserv.cfg*.